// Take in what we need to determine ray direction.
in vec2 fs_pos;

uniform vec3 lookAt;
uniform vec3 up;
uniform float aspectRatio;
uniform float fovY;

// TODO improve the performance of this.
mat3 rotationMatrix(vec3 axis, float angle)
{
    vec3 s = axis * sin(angle);
    float c = cos(angle);
    vec3 oc = axis * (1 - c);
    
    vec3 sqd = axis * axis;
    vec3 cross = oc * sqd + c;
    
    return mat3(cross.x,             oc.x * axis.y - s.z, oc.z * axis.x + s.y, 
                oc.x * axis.y + s.z, cross.y,             oc.y * axis.z - s.x, 
                oc.z * axis.x - s.y, oc.y * axis.z + s.x, cross.z);
}

vec3 getRayDirection()
{
    vec2 screenPos = vec2(fs_pos.x, fs_pos.y);
    vec2 rotationAngles = vec2(screenPos.x * aspectRatio, -screenPos.y) * (fovY / 2.0f);
    
    vec3 right = cross(up, lookAt);
    return lookAt * rotationMatrix(up, radians(rotationAngles.x)) * rotationMatrix(right, radians(rotationAngles.y));
}